generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  image     String?
  password  String
  role      Role     @default(user)
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  commentsQuestions CommentsQuestions[]
  commentsWishes    CommentsWishes[]
  commentsReviews   CommentsReviews[]
  complains         Complains[]
}

enum Role {
  admin
  user
}

model Mail {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String   @db.Text
  createdAt DateTime @default(now())
}

model CommentsQuestions {
  id        Int      @id @default(autoincrement())
  userId    Int?
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User?    @relation(fields: [userId], references: [id])
}

model CommentsWishes {
  id        Int      @id @default(autoincrement())
  userId    Int?
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User?    @relation(fields: [userId], references: [id])
}

model CommentsReviews {
  id        Int      @id @default(autoincrement())
  userId    Int?
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User?    @relation(fields: [userId], references: [id])
}

model Complains {
  id        Int      @id @default(autoincrement())
  userId    Int?     
  commentId Int?
  type      String
  reason    String
  createdAt DateTime @default(now())

  user      User?    @relation(fields: [userId], references: [id])
}